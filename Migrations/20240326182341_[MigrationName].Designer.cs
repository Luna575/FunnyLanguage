// <auto-generated />
using FunnyLanguage_WPF.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FunnyLanguage_WPF.Migrations
{
    [DbContext(typeof(VideoContext))]
    [Migration("20240326182341_[MigrationName]")]
    partial class MigrationName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("FunnyLanguage_WPF.Models.Video", b =>
                {
                    b.Property<int>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WordListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("VideoId");

                    b.HasIndex("WordListId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("FunnyLanguage_WPF.Models.Word", b =>
                {
                    b.Property<int>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstLanguage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondLanguage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TranslatedText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WordlistId")
                        .HasColumnType("INTEGER");

                    b.HasKey("WordId");

                    b.HasIndex("WordlistId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("FunnyLanguage_WPF.Models.WordList", b =>
                {
                    b.Property<int>("WordListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("WordListId");

                    b.ToTable("WordLists");
                });

            modelBuilder.Entity("FunnyLanguage_WPF.Models.Video", b =>
                {
                    b.HasOne("FunnyLanguage_WPF.Models.WordList", "WordList")
                        .WithMany()
                        .HasForeignKey("WordListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WordList");
                });

            modelBuilder.Entity("FunnyLanguage_WPF.Models.Word", b =>
                {
                    b.HasOne("FunnyLanguage_WPF.Models.WordList", null)
                        .WithMany("Words")
                        .HasForeignKey("WordlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FunnyLanguage_WPF.Models.WordList", b =>
                {
                    b.Navigation("Words");
                });
#pragma warning restore 612, 618
        }
    }
}
